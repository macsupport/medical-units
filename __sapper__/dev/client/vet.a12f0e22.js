import { S as SvelteComponentDev, a as init, d as dispatch_dev, s as safe_not_equal, v as validate_each_argument, b as validate_slots, F as Fa, f as faFlagUsa, c as faGlobe, e as faArrowsAltH, g as faVial, h as faCalculator, j as element, t as text, k as space, l as create_component, m as claim_element, n as children, o as claim_text, p as detach_dev, q as claim_space, r as claim_component, u as attr_dev, w as add_location, x as insert_dev, y as append_dev, z as mount_component, A as listen_dev, B as set_data_dev, C as prop_dev, D as transition_in, E as transition_out, G as destroy_component, H as run_all, I as query_selector_all, J as set_input_value, K as check_outros, L as destroy_each, M as group_outros } from './client.f0abdcae.js';
import { f as fade, a as fly } from './index.3135d08c.js';

/* src/routes/vet.svelte generated by Svelte v3.24.1 */

const file = "src/routes/vet.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[12] = list[i];
	child_ctx[4] = i;
	return child_ctx;
}

// (85:2) {#each filteredUnits as unit, i}
function create_each_block(ctx) {
	let div9;
	let div8;
	let div3;
	let div0;
	let t0_value = /*unit*/ ctx[12].name + "";
	let t0;
	let t1;
	let div1;
	let strong0;
	let t2;
	let t3;
	let t4_value = /*unit*/ ctx[12].specimen + "";
	let t4;
	let t5;
	let div2;
	let strong1;
	let t6;
	let t7;
	let t8_value = /*unit*/ ctx[12].factor + "";
	let t8;
	let t9;
	let div5;
	let label0;
	let fa0;
	let t10;
	let t11;
	let input0;
	let input0_value_value;
	let t12;
	let div4;
	let t13;
	let t14_value = /*unit*/ ctx[12].conventionalRange + "";
	let t14;
	let t15;
	let t16_value = /*unit*/ ctx[12].conventionalUnit + "";
	let t16;
	let t17;
	let div7;
	let label1;
	let fa1;
	let t18;
	let t19;
	let input1;
	let input1_value_value;
	let t20;
	let div6;
	let t21;
	let t22_value = /*unit*/ ctx[12].siRange + "";
	let t22;
	let t23;
	let t24_value = /*unit*/ ctx[12].siUnit + "";
	let t24;
	let t25;
	let current;
	let mounted;
	let dispose;

	fa0 = new Fa({
			props: {
				class: "inline",
				size: "lg",
				primaryColor: "blue",
				secondaryColor: "red",
				icon: faFlagUsa
			},
			$$inline: true
		});

	function input_handler(...args) {
		return /*input_handler*/ ctx[6](/*i*/ ctx[4], ...args);
	}

	fa1 = new Fa({
			props: {
				class: "inline",
				size: "lg",
				primaryColor: "green",
				secondaryColor: "lightblue",
				icon: faGlobe
			},
			$$inline: true
		});

	function input_handler_1(...args) {
		return /*input_handler_1*/ ctx[7](/*i*/ ctx[4], ...args);
	}

	const block = {
		c: function create() {
			div9 = element("div");
			div8 = element("div");
			div3 = element("div");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			strong0 = element("strong");
			t2 = text("Specimen:");
			t3 = space();
			t4 = text(t4_value);
			t5 = space();
			div2 = element("div");
			strong1 = element("strong");
			t6 = text("Conversion Factor:");
			t7 = space();
			t8 = text(t8_value);
			t9 = space();
			div5 = element("div");
			label0 = element("label");
			create_component(fa0.$$.fragment);
			t10 = text(" US Unit");
			t11 = space();
			input0 = element("input");
			t12 = space();
			div4 = element("div");
			t13 = text("US Range:");
			t14 = text(t14_value);
			t15 = space();
			t16 = text(t16_value);
			t17 = space();
			div7 = element("div");
			label1 = element("label");
			create_component(fa1.$$.fragment);
			t18 = text(" SI Unit");
			t19 = space();
			input1 = element("input");
			t20 = space();
			div6 = element("div");
			t21 = text("SI Range: ");
			t22 = text(t22_value);
			t23 = space();
			t24 = text(t24_value);
			t25 = space();
			this.h();
		},
		l: function claim(nodes) {
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div3 = claim_element(div8_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, t0_value);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div3_nodes);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			strong0 = claim_element(div1_nodes, "STRONG", {});
			var strong0_nodes = children(strong0);
			t2 = claim_text(strong0_nodes, "Specimen:");
			strong0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			t4 = claim_text(div1_nodes, t4_value);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			strong1 = claim_element(div2_nodes, "STRONG", {});
			var strong1_nodes = children(strong1);
			t6 = claim_text(strong1_nodes, "Conversion Factor:");
			strong1_nodes.forEach(detach_dev);
			t7 = claim_space(div2_nodes);
			t8 = claim_text(div2_nodes, t8_value);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t9 = claim_space(div8_nodes);
			div5 = claim_element(div8_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			label0 = claim_element(div5_nodes, "LABEL", { class: true, for: true });
			var label0_nodes = children(label0);
			claim_component(fa0.$$.fragment, label0_nodes);
			t10 = claim_text(label0_nodes, " US Unit");
			label0_nodes.forEach(detach_dev);
			t11 = claim_space(div5_nodes);

			input0 = claim_element(div5_nodes, "INPUT", {
				class: true,
				value: true,
				type: true,
				placeholder: true
			});

			t12 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			t13 = claim_text(div4_nodes, "US Range:");
			t14 = claim_text(div4_nodes, t14_value);
			t15 = claim_space(div4_nodes);
			t16 = claim_text(div4_nodes, t16_value);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t17 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label1 = claim_element(div7_nodes, "LABEL", { class: true, for: true });
			var label1_nodes = children(label1);
			claim_component(fa1.$$.fragment, label1_nodes);
			t18 = claim_text(label1_nodes, " SI Unit");
			label1_nodes.forEach(detach_dev);
			t19 = claim_space(div7_nodes);

			input1 = claim_element(div7_nodes, "INPUT", {
				class: true,
				value: true,
				type: true,
				placeholder: true
			});

			t20 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			t21 = claim_text(div6_nodes, "SI Range: ");
			t22 = claim_text(div6_nodes, t22_value);
			t23 = claim_space(div6_nodes);
			t24 = claim_text(div6_nodes, t24_value);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t25 = claim_space(div9_nodes);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "font-bold text-black text-xl");
			add_location(div0, file, 91, 15, 8983);
			add_location(strong0, file, 92, 122, 9165);
			attr_dev(div1, "class", "inline text-gray-700 text-xs");
			add_location(div1, file, 92, 13, 9056);
			add_location(strong1, file, 93, 107, 9323);
			attr_dev(div2, "class", "inline text-gray-700 text-xs ml-3");
			add_location(div2, file, 93, 9, 9225);
			attr_dev(div3, "class", "w-full md:w-2/5");
			add_location(div3, file, 89, 1, 8924);
			attr_dev(label0, "class", "block uppercase tracking-wide text-gray-700 text-xs font-bold mb-1");
			attr_dev(label0, "for", "grid-first-name");
			add_location(label0, file, 97, 2, 9453);
			attr_dev(input0, "class", "appearance-none mt-1 block w-full bg-gray-100 text-gray-700 border border-blue-200 rounded py-2 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500");
			input0.value = input0_value_value = /*unit*/ ctx[12].usValue;
			attr_dev(input0, "type", "number");
			attr_dev(input0, "placeholder", " US");
			add_location(input0, file, 100, 15, 9692);
			attr_dev(div4, "class", "text-gray-700 text-sm");
			add_location(div4, file, 101, 0, 9982);
			attr_dev(div5, "class", "md:w-1/3 w-1/2   h-14 pr-1 pl-1");
			add_location(div5, file, 96, 2, 9405);
			attr_dev(label1, "class", "block uppercase tracking-wide text-gray-700 text-xs font-bold mb-1");
			attr_dev(label1, "for", "grid-first-name");
			add_location(label1, file, 105, 1, 10149);
			attr_dev(input1, "class", "appearance-none mt-1 block w-full bg-gray-100 text-gray-700 border border-gray-200 rounded py-2 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500");
			input1.value = input1_value_value = /*unit*/ ctx[12].siValue;
			attr_dev(input1, "type", "number");
			attr_dev(input1, "placeholder", "SI");
			add_location(input1, file, 108, 15, 10394);
			attr_dev(div6, "class", "text-gray-700 text-sm");
			add_location(div6, file, 109, 0, 10682);
			attr_dev(div7, "class", "md:w-1/3 w-1/2  h-14 pr-1 pl-1");
			add_location(div7, file, 104, 1, 10103);
			attr_dev(div8, "class", "flex flex-wrap md:flex-no-wrap lg:flex-no-wrap px-1  mb-1");
			add_location(div8, file, 88, 1, 8851);
			attr_dev(div9, "class", "border border-gray-300 rounded mb-2");
			add_location(div9, file, 85, 1, 8798);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div9, anchor);
			append_dev(div9, div8);
			append_dev(div8, div3);
			append_dev(div3, div0);
			append_dev(div0, t0);
			append_dev(div3, t1);
			append_dev(div3, div1);
			append_dev(div1, strong0);
			append_dev(strong0, t2);
			append_dev(div1, t3);
			append_dev(div1, t4);
			append_dev(div3, t5);
			append_dev(div3, div2);
			append_dev(div2, strong1);
			append_dev(strong1, t6);
			append_dev(div2, t7);
			append_dev(div2, t8);
			append_dev(div8, t9);
			append_dev(div8, div5);
			append_dev(div5, label0);
			mount_component(fa0, label0, null);
			append_dev(label0, t10);
			append_dev(div5, t11);
			append_dev(div5, input0);
			append_dev(div5, t12);
			append_dev(div5, div4);
			append_dev(div4, t13);
			append_dev(div4, t14);
			append_dev(div4, t15);
			append_dev(div4, t16);
			append_dev(div8, t17);
			append_dev(div8, div7);
			append_dev(div7, label1);
			mount_component(fa1, label1, null);
			append_dev(label1, t18);
			append_dev(div7, t19);
			append_dev(div7, input1);
			append_dev(div7, t20);
			append_dev(div7, div6);
			append_dev(div6, t21);
			append_dev(div6, t22);
			append_dev(div6, t23);
			append_dev(div6, t24);
			append_dev(div9, t25);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", input_handler, false, false, false),
					listen_dev(input1, "input", input_handler_1, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if ((!current || dirty & /*filteredUnits*/ 2) && t0_value !== (t0_value = /*unit*/ ctx[12].name + "")) set_data_dev(t0, t0_value);
			if ((!current || dirty & /*filteredUnits*/ 2) && t4_value !== (t4_value = /*unit*/ ctx[12].specimen + "")) set_data_dev(t4, t4_value);
			if ((!current || dirty & /*filteredUnits*/ 2) && t8_value !== (t8_value = /*unit*/ ctx[12].factor + "")) set_data_dev(t8, t8_value);

			if (!current || dirty & /*filteredUnits*/ 2 && input0_value_value !== (input0_value_value = /*unit*/ ctx[12].usValue)) {
				prop_dev(input0, "value", input0_value_value);
			}

			if ((!current || dirty & /*filteredUnits*/ 2) && t14_value !== (t14_value = /*unit*/ ctx[12].conventionalRange + "")) set_data_dev(t14, t14_value);
			if ((!current || dirty & /*filteredUnits*/ 2) && t16_value !== (t16_value = /*unit*/ ctx[12].conventionalUnit + "")) set_data_dev(t16, t16_value);

			if (!current || dirty & /*filteredUnits*/ 2 && input1_value_value !== (input1_value_value = /*unit*/ ctx[12].siValue)) {
				prop_dev(input1, "value", input1_value_value);
			}

			if ((!current || dirty & /*filteredUnits*/ 2) && t22_value !== (t22_value = /*unit*/ ctx[12].siRange + "")) set_data_dev(t22, t22_value);
			if ((!current || dirty & /*filteredUnits*/ 2) && t24_value !== (t24_value = /*unit*/ ctx[12].siUnit + "")) set_data_dev(t24, t24_value);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(fa0.$$.fragment, local);
			transition_in(fa1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(fa0.$$.fragment, local);
			transition_out(fa1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div9);
			destroy_component(fa0);
			destroy_component(fa1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(85:2) {#each filteredUnits as unit, i}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let meta;
	let script0;
	let script0_src_value;
	let script1;
	let script1_src_value;
	let script2;
	let t0;
	let t1;
	let div1;
	let div0;
	let t2;
	let input;
	let t3;
	let t4;
	let footer;
	let t5;
	let current;
	let mounted;
	let dispose;
	let each_value = /*filteredUnits*/ ctx[1];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			meta = element("meta");
			script0 = element("script");
			script1 = element("script");
			script2 = element("script");
			t0 = text("window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-255701-18');");
			t1 = space();
			div1 = element("div");
			div0 = element("div");
			t2 = text("Search Units ");
			input = element("input");
			t3 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t4 = space();
			footer = element("footer");
			t5 = text("www.medicalunitconverter.com");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-15u5tqe\"]", document.head);
			meta = claim_element(head_nodes, "META", { name: true, content: true });
			script0 = claim_element(head_nodes, "SCRIPT", { async: true, src: true });
			var script0_nodes = children(script0);
			script0_nodes.forEach(detach_dev);
			script1 = claim_element(head_nodes, "SCRIPT", { async: true, src: true });
			var script1_nodes = children(script1);
			script1_nodes.forEach(detach_dev);
			script2 = claim_element(head_nodes, "SCRIPT", {});
			var script2_nodes = children(script2);
			t0 = claim_text(script2_nodes, "window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-255701-18');");
			script2_nodes.forEach(detach_dev);
			head_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t2 = claim_text(div0_nodes, "Search Units ");

			input = claim_element(div0_nodes, "INPUT", {
				placeholder: true,
				class: true,
				type: true
			});

			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			footer = claim_element(nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			t5 = claim_text(footer_nodes, "www.medicalunitconverter.com");
			footer_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "medicalunitconverter.com";
			attr_dev(meta, "name", "description");
			attr_dev(meta, "content", "Medical unit conversion calculator, medicalunitconverter.com. Convert US units to International (SI) units easily with this onlne calculator. Easily search for a specific lab test, enter any value and convert the units. For both Human and Veterinary values.");
			add_location(meta, file, 2, 2, 58);
			script0.async = true;
			if (script0.src !== (script0_src_value = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js")) attr_dev(script0, "src", script0_src_value);
			add_location(script0, file, 3, 4, 356);
			script1.async = true;
			if (script1.src !== (script1_src_value = "https://www.googletagmanager.com/gtag/js?id=UA-255701-18")) attr_dev(script1, "src", script1_src_value);
			add_location(script1, file, 6, 0, 504);
			add_location(script2, file, 7, 0, 591);
			attr_dev(input, "placeholder", "Unit");
			attr_dev(input, "class", "mt-1 block w-full  text-gray-700 border border-gray-300 rounded-lg py-2 px-2 leading-tight bg-white  focus:outline-none focus:bg-white focus:border-gray-500");
			attr_dev(input, "type", "search");
			add_location(input, file, 81, 65, 8528);
			attr_dev(div0, "class", "md:w-1/4 mb-3 sm:w-1/3 text-black p-1");
			add_location(div0, file, 81, 1, 8464);
			attr_dev(div1, "class", "mx-auto  px-1");
			add_location(div1, file, 76, 2, 8429);
			attr_dev(footer, "class", "w-full text-center border-t border-grey p-4 pin-b");
			add_location(footer, file, 127, 0, 10849);
		},
		m: function mount(target, anchor) {
			append_dev(document.head, meta);
			append_dev(document.head, script0);
			append_dev(document.head, script1);
			append_dev(document.head, script2);
			append_dev(script2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t2);
			append_dev(div0, input);
			set_input_value(input, /*prefix*/ ctx[0]);
			append_dev(div1, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}

			insert_dev(target, t4, anchor);
			insert_dev(target, footer, anchor);
			append_dev(footer, t5);
			current = true;

			if (!mounted) {
				dispose = listen_dev(input, "input", /*input_input_handler*/ ctx[5]);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*prefix*/ 1) {
				set_input_value(input, /*prefix*/ ctx[0]);
			}

			if (dirty & /*filteredUnits, setBothFromSI, faGlobe, setBothFromUS, faFlagUsa*/ 14) {
				each_value = /*filteredUnits*/ ctx[1];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div1, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			detach_dev(meta);
			detach_dev(script0);
			detach_dev(script1);
			detach_dev(script2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div1);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(footer);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let name = "";

	let units = [
		{
			"name": "Alkaline phosphatase",
			"specimen": "Serum",
			"conventionalRange": "30-120",
			"conventionalUnit": "IU/L",
			"factor": "1",
			"siRange": "0.5-2.0",
			"siUnit": "U/L",
			"siValue": "0.5",
			"usValue": "30"
		},
		{
			"name": "Alanine aminotransferase (ALT)",
			"specimen": "Serum",
			"conventionalRange": "10-40",
			"conventionalUnit": "IU/L",
			"factor": "1",
			"siRange": "0.17-0.68",
			"siUnit": "U/L",
			"siValue": "0.17",
			"usValue": "10"
		},
		{
			"name": "Albumin",
			"specimen": "Serum",
			"conventionalRange": "3.5-5.0",
			"conventionalUnit": "g/dL",
			"factor": "10",
			"siRange": "35-50",
			"siUnit": "g/L",
			"siValue": "35",
			"usValue": "3.5"
		},
		{
			"name": "Ammonia (as nitrogen)",
			"specimen": "Serum, Plasma",
			"conventionalRange": "15-45",
			"conventionalUnit": "mcg/dL",
			"factor": "0.5872",
			"siRange": "11-32",
			"siUnit": "µmol/L",
			"siValue": "11",
			"usValue": "15"
		},
		{
			"name": "Amylase",
			"specimen": "Serum",
			"conventionalRange": "27-131",
			"conventionalUnit": "Somogyi units",
			"factor": "1.85",
			"siRange": "0.46-2.23",
			"siUnit": "U/L",
			"siValue": "0.46",
			"usValue": "27"
		},
		{
			"name": "Aspartate aminotransferase (AST)",
			"specimen": "Serum",
			"conventionalRange": "10-30",
			"conventionalUnit": "U/L",
			"factor": "1",
			"siRange": "0.17-0.51",
			"siUnit": "U/L",
			"siValue": "0.17",
			"usValue": "10"
		},
		{
			"name": "Bilirubin, total",
			"specimen": "Serum",
			"conventionalRange": "0.3-1.2",
			"conventionalUnit": "mg/dL",
			"factor": "17.104",
			"siRange": "5.0-21.0",
			"siUnit": "µmol/L",
			"siValue": "5",
			"usValue": "0.3"
		},
		{
			"name": "Bilirubin, direct (conjugated)",
			"specimen": "Serum",
			"conventionalRange": "0.1-0.3",
			"conventionalUnit": "mg/dL",
			"factor": "17.104",
			"siRange": "1.7-5.1",
			"siUnit": "µmol/L",
			"siValue": "1.7",
			"usValue": "0.1"
		},
		{
			"name": "Calcium, ionized",
			"specimen": "Serum",
			"conventionalRange": "4.60-5.08",
			"conventionalUnit": "mg/dL",
			"factor": "0.25",
			"siRange": "1.15-1.27",
			"siUnit": "mmol/L",
			"siValue": "1.15",
			"usValue": "4.6"
		},
		{
			"name": "Calcium, total",
			"specimen": "Serum",
			"conventionalRange": "8.2-10.2",
			"conventionalUnit": "mg/dL",
			"factor": "0.25",
			"siRange": "2.05-2.55",
			"siUnit": "mmol/L",
			"siValue": "2.05",
			"usValue": "8.2"
		},
		{
			"name": "Carbon dioxide (total)",
			"specimen": "Serum, Plasma",
			"conventionalRange": "22-28",
			"conventionalUnit": "mEq/L",
			"factor": "1",
			"siRange": "22-28",
			"siUnit": "mmol/L",
			"siValue": "22-28",
			"usValue": "22"
		},
		{
			"name": "Chloride",
			"specimen": "Serum, Plasma",
			"conventionalRange": "96-106",
			"conventionalUnit": "mEq/L",
			"factor": "1",
			"siRange": "96-106",
			"siUnit": "mmol/L",
			"siValue": "110",
			"usValue": "110"
		},
		{
			"name": "Cholesterol (total)",
			"specimen": "Serum, Plasma",
			"conventionalRange": "<200",
			"conventionalUnit": "mg/dL",
			"factor": "0.0259",
			"siRange": "<5.18",
			"siUnit": "mmol/L",
			"siValue": "3.5",
			"usValue": "135"
		},
		{
			"name": "Copper",
			"specimen": "Serum",
			"conventionalRange": "70-140",
			"conventionalUnit": "µg/dL",
			"factor": "0.157",
			"siRange": "44866",
			"siUnit": "µmol/L",
			"siValue": "44866",
			"usValue": "70"
		},
		{
			"name": "Cortisol",
			"specimen": "Serum, Plasma",
			"conventionalRange": "5-25",
			"conventionalUnit": "mcg/dL",
			"factor": "27.588",
			"siRange": "140-690",
			"siUnit": "nmol/L",
			"siValue": "140",
			"usValue": "5"
		},
		{
			"name": "Creatine kinase (CK)",
			"specimen": "Serum",
			"conventionalRange": "40-150",
			"conventionalUnit": "IU/L",
			"factor": "1",
			"siRange": "0.67-2.5",
			"siUnit": "U/L",
			"siValue": "0.67",
			"usValue": "40"
		},
		{
			"name": "Creatinine",
			"specimen": "Serum, Plasma",
			"conventionalRange": "0.5-1.2",
			"conventionalUnit": "mg/dL",
			"factor": "88.4",
			"siRange": "53-106",
			"siUnit": "µmol/L",
			"siValue": "44",
			"usValue": "0.5"
		},
		{
			"name": "Fibrinogen",
			"specimen": "Plasma",
			"conventionalRange": "200-400",
			"conventionalUnit": "mg/dL",
			"factor": "0.0294",
			"siRange": "5.8-11.8",
			"siUnit": "µmol/L",
			"siValue": "5.8",
			"usValue": "200"
		},
		{
			"name": "Glucose",
			"specimen": "Serum",
			"conventionalRange": "70-110",
			"conventionalUnit": "mg/dL",
			"factor": "0.0555",
			"siRange": "3.9-6.1",
			"siUnit": "mmol/L",
			"siValue": "3.9",
			"usValue": "70"
		},
		{
			"name": "Iron",
			"specimen": "Serum",
			"conventionalRange": "60-150",
			"conventionalUnit": "µg/dL",
			"factor": "0.179",
			"siRange": "10.7-26.9",
			"siUnit": "µmol/L",
			"siValue": "10.7",
			"usValue": "60"
		},
		{
			"name": "Iron-binding capacity",
			"specimen": "Serum",
			"conventionalRange": "250-450",
			"conventionalUnit": "µg/dL",
			"factor": "0.179",
			"siRange": "44.8-80.6",
			"siUnit": "µmol/L",
			"siValue": "45",
			"usValue": "250"
		},
		{
			"name": "Lipase",
			"specimen": "Serum",
			"conventionalRange": "31-186",
			"conventionalUnit": "IU/L",
			"factor": "1",
			"siRange": "0.5-3.2",
			"siUnit": "U/L",
			"siValue": "0.5",
			"usValue": "31"
		},
		{
			"name": "Phosphorus (inorganic)",
			"specimen": "Serum",
			"conventionalRange": "2.3-4.7",
			"conventionalUnit": "mg/dL",
			"factor": "0.323",
			"siRange": "0.74-1.52",
			"siUnit": "mmol/L",
			"siValue": "0.74",
			"usValue": "2.3"
		},
		{
			"name": "Potassium",
			"specimen": "Serum",
			"conventionalRange": "3.5-5.0",
			"conventionalUnit": "mEq/L",
			"factor": "1",
			"siRange": "3.5-5.0",
			"siUnit": "mmol/L",
			"siValue": "3.5",
			"usValue": "3.5"
		},
		{
			"name": "Protein (total)",
			"specimen": "Serum",
			"conventionalRange": "5.4-8.0",
			"conventionalUnit": "g/dL",
			"factor": "10",
			"siRange": "54-80",
			"siUnit": "g/L",
			"siValue": "60",
			"usValue": "6"
		},
		{
			"name": "Prothrombin time (PT)",
			"specimen": "Plasma",
			"conventionalRange": "10-13",
			"conventionalUnit": "s",
			"siRange": "10-13",
			"factor": "1",
			"siValue": "s",
			"usValue": "10"
		},
		{
			"name": "Partial thromboplastin time (PTT)",
			"specimen": "Whole blood",
			"conventionalRange": "25-40",
			"conventionalUnit": "s",
			"factor": "1",
			"siRange": "25-40",
			"siUnit": "s",
			"siValue": "25",
			"usValue": "25"
		},
		{
			"name": "Sodium",
			"specimen": "Serum",
			"conventionalRange": "136-142",
			"conventionalUnit": "mEq/L",
			"factor": "1",
			"siRange": "136-142",
			"siUnit": "mmol/L",
			"siValue": "136",
			"usValue": "136"
		},
		{
			"name": "Triglycerides",
			"specimen": "Serum",
			"conventionalRange": "<160",
			"conventionalUnit": "mcg/dL",
			"factor": "0.0113",
			"siRange": "1.8",
			"siUnit": "mmol/L",
			"siValue": "1.8",
			"usValue": "140"
		},
		{
			"name": "Triiodothyronine, total (T<sub>3</sub>)",
			"specimen": "Serum",
			"conventionalRange": "60-180",
			"conventionalUnit": "mcg/dL",
			"factor": "15.6",
			"siRange": "0.92-2.76",
			"siUnit": "nmol/L",
			"siValue": "0.92",
			"usValue": "60"
		},
		{
			"name": "Thyroxine, free (FT <sub>4</sub> )",
			"specimen": "Serum",
			"conventionalRange": "0.9-2.3",
			"conventionalUnit": "ng/dL",
			"factor": "12.871",
			"siRange": "12-30",
			"siUnit": "pmol/L",
			"siValue": "12",
			"usValue": "0.9"
		},
		{
			"name": "Thyroxine, total (T <sub>4</sub> )",
			"specimen": "Serum",
			"conventionalRange": "5.5-12.5",
			"conventionalUnit": "mcg/dL",
			"factor": "12.871",
			"siRange": "71-160",
			"siUnit": "nmol/L",
			"siValue": "71",
			"usValue": "5.5"
		},
		{
			"name": "Urea nitrogen",
			"specimen": "Serum",
			"conventionalRange": "8-23",
			"conventionalUnit": "mg/dL",
			"factor": "0.357",
			"siRange": "2.9-8.2",
			"siUnit": "mmol/L",
			"siValue": "2.9",
			"usValue": "8"
		},
		{
			"name": "Uric acid",
			"specimen": "Serum",
			"conventionalRange": "4.0-8.0",
			"conventionalUnit": "mg/dL",
			"factor": "0.0595",
			"siRange": "240-480",
			"siUnit": "mmol/L",
			"siValue": "240",
			"usValue": "4"
		},
		{
			"name": "Urine protein/creatinine ratio",
			"specimen": "Serum",
			"conventionalRange": "",
			"conventionalUnit": "g/g",
			"factor": "0.113",
			"siRange": "",
			"siUnit": "g/mml",
			"siValue": "",
			"usValue": ""
		}
	];

	let prefix = "";
	let i = 0;
	let current = "veterinary";

	function setBothFromSI(value, i) {
		const { factor, siValue } = units[i];
		$$invalidate(8, units[i].siValue = +value, units);
		$$invalidate(8, units[i].usValue = +(value / factor).toFixed(2), units);
	}

	function setBothFromUS(value, i) {
		const { factor, usValue } = units[i];
		$$invalidate(8, units[i].usValue = +value, units);
		$$invalidate(8, units[i].siValue = +(value * factor).toFixed(2), units);
		
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Vet> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Vet", $$slots, []);

	function input_input_handler() {
		prefix = this.value;
		$$invalidate(0, prefix);
	}

	const input_handler = (i, e) => setBothFromUS(e.target.value, i);
	const input_handler_1 = (i, e) => setBothFromSI(e.target.value, i);

	$$self.$capture_state = () => ({
		fade,
		fly,
		name,
		units,
		prefix,
		i,
		current,
		setBothFromSI,
		setBothFromUS,
		Fa,
		faFlagUsa,
		faGlobe,
		faArrowsAltH,
		faVial,
		faCalculator,
		filteredUnits,
		selected
	});

	$$self.$inject_state = $$props => {
		if ("name" in $$props) name = $$props.name;
		if ("units" in $$props) $$invalidate(8, units = $$props.units);
		if ("prefix" in $$props) $$invalidate(0, prefix = $$props.prefix);
		if ("i" in $$props) $$invalidate(4, i = $$props.i);
		if ("current" in $$props) current = $$props.current;
		if ("filteredUnits" in $$props) $$invalidate(1, filteredUnits = $$props.filteredUnits);
		if ("selected" in $$props) selected = $$props.selected;
	};

	let filteredUnits;
	let selected;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*prefix, units*/ 257) {
			 $$invalidate(1, filteredUnits = prefix
			? units.filter(unit => {
					const names = `${unit.name}`;
					return names.toLowerCase().startsWith(prefix.toLowerCase());
				})
			: units);
		}

		if ($$self.$$.dirty & /*filteredUnits*/ 2) {
			 selected = filteredUnits[i];
		}
	};

	return [
		prefix,
		filteredUnits,
		setBothFromSI,
		setBothFromUS,
		i,
		input_input_handler,
		input_handler,
		input_handler_1
	];
}

class Vet extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Vet",
			options,
			id: create_fragment.name
		});
	}
}

export default Vet;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
